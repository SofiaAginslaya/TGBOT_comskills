# –ø—Ä–æ—á–µ–µ
import sqlite3
import main_csp
from telegram import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton, ParseMode


def mark(update, context):
    update.message.reply_text("–í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É –±–æ—Ç—É –∏–ª–∏ —É–∑–Ω–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥?üôÉ",
                              reply_markup=ReplyKeyboardMarkup([["–ø–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É", "—É–∑–Ω–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥"],
                                                                ["–≤–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ"]], resize_keyboard=True))


def set_mark(update, context):
    update.message.reply_text("–û–ø–∏—à–∏—Ç–µ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±–æ—Ç–∞, –Ω–∞–∂–∞–≤ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫:",
                              reply_markup=ReplyKeyboardMarkup([["1", "2", "3", "4", "5"], ["–≤–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ"]],
                                                               resize_keyboard=True))


def add_mark_to_bd(update, context):
    update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É! –≠—Ç–∏–º —Ç—ã –ø–æ–º–æ–≥–∞–µ—à—å –º–Ω–µ –ø–æ–Ω—è—Ç—å, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —è —Ö–æ—Ä–æ—à–∞üíû",
                              reply_markup=ReplyKeyboardMarkup(main_csp.SECTION_OTHER, resize_keyboard=True))
    con = sqlite3.connect("bd_tgbot_comskills.db")
    cursor = con.cursor()
    query = f'''INSERT INTO counters_and_marks(mark) VALUES(?)'''
    cursor.execute(query, (update.message.text,))
    con.commit()
    con.close()


def know_mark(update, context):
    con = sqlite3.connect("bd_tgbot_comskills.db")
    cursor = con.cursor()
    result = cursor.execute(f"SELECT mark FROM counters_and_marks").fetchall()
    summa, kolvo = main_csp.counter_comparison(result)
    update.message.reply_text("*üôä–†–µ–π—Ç–∏–Ω–≥ –±–æ—Ç–∞:*\n_üëâ" + str(summa / kolvo) + " / 5üëà_\n\n–ö–∞–∂–µ—Ç—Å—è, —è –Ω–µ —Ç–∞–∫ –ø–ª–æ—Ö–∞üíå",
                              parse_mode=ParseMode.MARKDOWN,
                              reply_markup=ReplyKeyboardMarkup(main_csp.SECTION_OTHER, resize_keyboard=True))
    con.close()


def be_back_other(update, context):
    update.message.reply_text("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –æ–±—Ä–∞—Ç–Ω–æ. –°–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä:",
                              reply_markup=ReplyKeyboardMarkup(main_csp.SECTION_OTHER, resize_keyboard=True))
