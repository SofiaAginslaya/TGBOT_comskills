# communication skills progress
from telegram.ext import Updater, MessageHandler, Filters, CommandHandler
from telegram import ReplyKeyboardMarkup
from settings import TG_TOKEN
import vocabulary
import long_song_about


MAIN_MENU = [["–≤—Å–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è"], ["–æ—Ü–µ–Ω–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"], ["–∞–≤—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞", "–º–æ—Ç–∏–≤–∞—Ü–∏—è"]]
MENU_MANY_WORDS = [["–¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å–ª–æ–≤–∞—Ä–Ω–æ–≥–æ –∑–∞–ø–∞—Å–∞"],
                   ["—á—Ç–æ –≤–∏–∂—É, –æ —Ç–æ–º –∏ –ø–æ—é"], ["–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]]
PART_OF_SPEECH = [["–∏–º–µ–Ω–∞\n—Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ", "–∏–º–µ–Ω–∞\n–ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ"], ["–≥–ª–∞–≥–æ–ª—ã", "–Ω–∞—Ä–µ—á–∏—è"],
                  ["üîô–≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥üîô", "–ø–æ–∑–≤–∞—Ç—å Sofia"]]


def start(update, context):
    update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç!üëã –Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤.\n\n–ú–æ–∂–µ—à—å –Ω–∞–∑—ã–≤–∞—Ç—å –º–µ–Ω—è Sofia! :)",
        reply_markup=ReplyKeyboardMarkup(MAIN_MENU, one_time_keyboard=False, resize_keyboard=True))


def sofia(update, context):
    update.message.reply_text("–Ø —Ç—É—Ç! –ß–µ–º –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?)",
                              reply_markup=ReplyKeyboardMarkup(MAIN_MENU, resize_keyboard=True))


def be_back_to_the_main_menu(update, context):
    update.message.reply_text("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                              reply_markup=ReplyKeyboardMarkup(MAIN_MENU, resize_keyboard=True))


def all_ex(update, context):
    update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π:",
                              reply_markup=ReplyKeyboardMarkup(MENU_MANY_WORDS, resize_keyboard=True))


def main():
    updater = Updater(TG_TOKEN, use_context=True)

    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.regex("–Ω–∞—á–∞—Ç—å"), start))
    dp.add_handler(CommandHandler("Sofia", sofia))
    dp.add_handler(MessageHandler(Filters.regex("Sofia"), sofia))

    dp.add_handler(CommandHandler("all_ex", all_ex))
    dp.add_handler(MessageHandler(Filters.regex("–≤—Å–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è"), all_ex))
    dp.add_handler(CommandHandler("many_words", vocabulary.many_words))
    dp.add_handler(MessageHandler(Filters.regex("—Å–ª–æ–≤–∞—Ä–Ω–æ–≥–æ –∑–∞–ø–∞—Å–∞"), vocabulary.many_words))
    dp.add_handler(MessageHandler(Filters.regex("–∏–º–µ–Ω–∞\n—Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ"), vocabulary.goals_many_words))
    dp.add_handler(MessageHandler(Filters.regex("–∏–º–µ–Ω–∞\n–ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ"), vocabulary.goals_many_words))
    dp.add_handler(MessageHandler(Filters.regex("–≥–ª–∞–≥–æ–ª—ã"), vocabulary.goals_many_words))
    dp.add_handler(MessageHandler(Filters.regex("–Ω–∞—Ä–µ—á–∏—è"), vocabulary.goals_many_words))
    dp.add_handler(CommandHandler("timer_for_many_words", vocabulary.set_timer_for_many_words))
    dp.add_handler(MessageHandler(Filters.regex("–Ω–∞—á–Ω–µ–º!"), vocabulary.set_timer_for_many_words))
    dp.add_handler(MessageHandler(Filters.regex("–ø–ª—é—Å"), vocabulary.plus_one))

    dp.add_handler(MessageHandler(Filters.regex("—á—Ç–æ –≤–∏–∂—É, –æ —Ç–æ–º –∏ –ø–æ—é"), long_song_about.long_song_about))
    dp.add_handler(MessageHandler(Filters.regex("—Å–ª–æ–≤–µ—á–∫–æ"), long_song_about.song_about_word))
    dp.add_handler(MessageHandler(Filters.regex("üîÉ–∑–∞–º–µ–Ω–∏—Ç—å —Å–ª–æ–≤–æüîÉ"), long_song_about.song_about_word))
    dp.add_handler(MessageHandler(Filters.regex("—è –∑–∞–∫–æ–Ω—á–∏–ª"), all_ex))

    dp.add_handler(CommandHandler("be_back_mm", be_back_to_the_main_menu))
    dp.add_handler(MessageHandler(Filters.regex("–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"), be_back_to_the_main_menu))
    dp.add_handler(CommandHandler("be_back", vocabulary.be_back_to_the_menu_many_words))
    dp.add_handler(MessageHandler(Filters.regex("–≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"), vocabulary.be_back_to_the_menu_many_words))

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
